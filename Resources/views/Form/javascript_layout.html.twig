{% block form_javascript %}
{% spaceless %}
    {% for child in form %}
        {{ form_javascript(child) }}
    {% endfor %}
{% endspaceless %}
{% endblock form_javascript %}

{% block field_javascript "" %}

{% block genemu_tinymce_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

        var {{ name }}Configs = {{ options|merge({
            'script_url': asset(options.script_url)
        })|json_encode|raw }};

        $field.tinymce({{ name }}Configs);
    });
</script>
{% endspaceless %}
{% endblock genemu_tinymce_javascript %}

{% block genemu_jqueryfile_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');
        var $form = $field.closest('form');
        var $queue = $('#{{ id }}Queue');

        var {{ name }}JoinFiles = function() {
            var files = $field.data('files');
            if (files) {
                $field.val(files.join(','));
            }

            return true;
        }

        var {{ name }}Configs = {{ configs|merge({
            'uploader':  asset(configs.uploader),
            'cancelImg': asset(configs.cancelImg),
            'script':    path(configs.script),
            'queueID':   id ~ 'Queue'
        })|json_encode|raw }};

        {{ name }}Configs.onError = function() {
            alert('error');
        }

    {% if configs.auto is not defined or configs.auto is sameas(false) %}
        {{ name }}Configs.onAllComplete = function(event, data) {
            $form.submit();
        };

        $form.submit(function(event) {
            if (event.originalEvent && $queue.children().length > 0) {
                $field.uploadifyUpload();
                event.preventDefault();
            } else {
                return {{ name }}JoinFiles();
            }
        });
    {% else %}
        $form.submit(function(event) {
            return {{ name }}JoinFiles();
        });
    {% endif %}

        {{ name }}Configs.onComplete = function(event, queueID, fileObj, response, data) {
            var response = eval('(' + response + ')');
            var current = $field.data('files');

            if (!current) {
                current = [];
            }

            current.push(response.file);
            $field.data('files', current);
        };

        $field.uploadify({{ name }}Configs);
    });
</script>
{% endspaceless %}
{% endblock genemu_jqueryfile_javascript %}

{% block genemu_jqueryimage_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

        var $configs = {{ configs|merge({
            'uploader':  asset(configs.uploader),
            'cancelImg': asset(configs.cancelImg),
            'script':    path(configs.script),
            'queueID':   id ~ 'Queue',
            'width':     19,
            'height':    19
        })|json_encode|raw }};

        var $coords = {};
        var $crop = null;

        var createCrop = function (data) {
            if ($crop) {
                $crop.destroy();
            }

            var $img = new Image();

            $($img).load(function() {
                var $ratio = data.width > 500 ? data.width / 500 : 1;

                $('#{{ id }}ImgPreview')
                    .width(data.width / $ratio)
                    .height(data.height / $ratio)
                    .attr('src', this.src);

                $crop = $.Jcrop('#{{ id }}ImgPreview', {
                    onSelect: function (c) {
                        $coords = {
                            x: c.x * $ratio,
                            y: c.y * $ratio,
                            w: c.w * $ratio,
                            h: c.h * $ratio
                        };
                    }
                });
            }).attr('src', data.src);
        }

        $configs.onComplete = function(event, queueID, fileObj, response, data) {
            var $response = eval('(' + response + ')');

            $field.data('files', $response.file);

            if ($response.result == '1') {
                createCrop({
                    width: $response.image.width,
                    height: $response.image.height,
                    src: $response.file
                });
            } else {
                alert('error');
            }
        }

        $('._change').click(function() {
            var $this = $(this);
            var $regex = new RegExp('^\\b(.*?) (.*)\\b', 'g');
            var $filter = $this.attr('class').replace($regex, '$1');

            var $data = {
                filter: $filter,
                image: $field.data('files')
            };

            $this.addClass('loading');

            if ($filter == 'crop') {
                $data = $.extend($data, $coords);
            }

            $.ajax({
                type: 'POST',
                url: '{{ path('genemu_form_image') }}',
                data: $data,
                dataType: 'json',
                success: function(data) {
                    createCrop({
                        width: data.width,
                        height: data.height,
                        src: data.file
                    });

                    $this.removeClass('loading');
                }
            });
        });

        $configs.onError = function() {
            alert('error');
        }

        $field.uploadify($configs);
    });
</script>
{% endspaceless %}
{% endblock genemu_jqueryimage_javascript %}

{% block genemu_jquerydate_javascript %}
{% spaceless %}
    {% if configs.buttonImage is defined %}
        {% set configs = configs|merge({'buttonImage': asset(configs.buttonImage)}) %}
    {% endif %}

<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');

        var {{ name }}Configs = {
            minDate: new Date({{ min_year }}, 0, 1),
            maxDate: new Date({{ max_year }}, 11, 31)
        };
    {% if widget == 'choice' %}
        {% set id = id ~ '_datepicker' %}

        var $year = $('#{{ form.year.get('id') }}');
        var $month = $('#{{ form.month.get('id') }}');
        var $day = $('#{{ form.day.get('id') }}');

        {{ name }}Configs.onSelect = function(date) {
            $year.val(parseInt(date.substring(0, 4), 10));
            $month.val(parseInt(date.substring(5, 7), 10));
            $day.val(parseInt(date.substring(8), 10));
        }
    {% endif %}

        $field.datepicker($.extend(
            {},
            {{ name }}Configs,
            jQuery.datepicker.regional['{{ culture == 'en' ? 'en-GB' : culture }}'],
            {{ configs|json_encode|raw }},
            { dateFormat: '{{ javascript_format }}' }
        ));
    });
</script>
{% endspaceless %}
{% endblock genemu_jquerydate_javascript %}

{% block genemu_jqueryautocompleter_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');
        var {{ name }}Autocomplete = $('#autocomplete_{{ id }}');

    {% if route_name is null %}
        var {{ name }}Choices = {{ choices|json_encode|raw }};
    {% else %}
        var {{ name }}Choices = '{{ path(route_name) }}';
    {% endif %}

        var {{ name }}Configs = {
            source: {{ name }}Choices,
            focus: function(event, ui) {
                return false;
            }
        };

    {% if multiple %}
        {{ name }}Configs.select = function(event, ui) {
            terms = this.value.split(/,\s*/);
            terms.pop();
            terms.push(ui.item.label);
            terms.push('');
            this.value = terms.join(', ');

            terms = $field.val();
            terms = !terms?[]:JSON.parse(terms);
            terms.push(ui.item);
            $field.val(JSON.stringify(terms));

            return false;
        }
    {% else %}
        {{ name }}Configs.select = function(event, ui) {
            this.value = ui.item.label;
            $field.val(ui.item.value);

            return false;
        }
    {% endif %}

        {{ name }}Autocomplete.bind('keydown', function(event) {
            if(event.keyCode === $.ui.keyCode.TAB && $(this).data('autocomplete').menu.active) {
                event.preventDefault();
            }
        })
        .autocomplete({{ name }}Configs);

    {% if multiple %}
        var {{ name }}Source = {{ name }}Autocomplete.data('autocomplete').source;
        {{ name }}Autocomplete.autocomplete('option', 'source', function(request, response) {
            request.term = request.term.split(/,\s*/).pop();
            {{ name }}Source(request, response);
        });
    {% endif %}
    });
</script>
{% endspaceless %}
{% endblock genemu_jqueryautocompleter_javascript %}

{% block genemu_jqueryslider_javascript %}
{% spaceless %}
<script type="text/javascript">
    jQuery(document).ready(function($) {
        var $field = $('#{{ id }}');
        var $silder = $('#{{ id }}Slider');

        $silder.slider({
            min: {{ configs.min }},
            max: {{ configs.max }},
            step: {{ configs.step }},
            orientation: '{{ configs.orientation }}',
            value: {{ value?value:0 }},
            slide: function(event, ui) {
                $field.val(ui.value);
            }
        });
    });
</script>
{% endspaceless %}
{% endblock genemu_jqueryslider_javascript %}

{% block genemu_recaptcha_javascript %}
{% spaceless %}
<script type="text/javascript" src="{{ server }}/js/recaptcha_ajax.js"></script>
<script type="text/javascript">
    var {{ name }}Show = function() {
        Recaptcha.create('{{ public_key }}', '{{ id }}_div', {{ configs|json_encode|raw }});
    };

    window.onload = {{ name }}Show;
</script>
{% endspaceless %}
{% endblock genemu_recaptcha_javascript %}
